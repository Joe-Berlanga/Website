@{
    ViewBag.Title = "Mvc";
}

<h3 class="span_4_of_12">MVC4</h3>

<p>
     ASP.NET MVC is one of a few ways of producing websites and web applications. It is my personal favourite way, for many reasons, mainly Razor syntax, allowing my C# experience to get involved, structure, the most important concept for MVC, and is lighter alternative to ASP.NET webforms. The overall concept is hard to grasp but 
    very rewarding.
</p>


<div class="span_9_of_12" id="wrapperMiddle"> 

    
    <h3 class="span_9_of_12 contentTitle">Models</h3>

    <div class="span_12_of_12 contentStyle" >

        <h3 class="span_9_of_12 contentTitle">Model Validation</h3>

        <div class="span_12_of_12 contentFeatures">

            <p> My first model is named Account. This model is responsible for the application data for creating an account. The model holds validation as well as the structure. </p>
            <img class="pics" src="~/Content/pics/modelCode.png" />

        </div>
 
        <h3 class="span_9_of_12 contentTitle">Result</h3>
        <div class="span_12_of_12 contentFeatures">


            <img class="pics" src="~/Content/pics/modelResult.png" />
        </div>

    </div>
   

   
    

    <div class="span_12_of_12 contentStyle" >

        <h3 class="span_9_of_12 contentTitle">Extra</h3>

        <div class="span_12_of_12 contentFeatures">

                        <p> using Razor syntax I can connect the model to the form like below. This creates the text boxes and labels the same as writing them in HTML but easier. Also the validation can be connected straight to the form. </p>


            <img class="pics" src="~/Content/pics/modelRazorValidation.png" />
        </div>


    </div>

    </div>

